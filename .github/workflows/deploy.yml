name: Update Walrus Site using Walrus Sites GA

on:
  push:
    branches:
      - main
      
jobs:
  build-site:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      actions: read
    outputs:
      output_dir: ${{ steps.parse.outputs.output_dir }}
      base64_hashes: ${{ steps.generate-manifest.outputs.base64_hashes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Parse config
        id: parse
        run: |
          CONFIG_PATH="./site.config.json"
          OUTPUT_DIR=$(jq -r '.outputDir // "dist"' "$CONFIG_PATH")
          echo "output_dir=$OUTPUT_DIR" >> "$GITHUB_OUTPUT"

      - name: Fail if output folder exists
        run: |
          if [ -d "${{ steps.parse.outputs.output_dir }}" ]; then
            echo "Output folder ${{ steps.parse.outputs.output_dir }} already exists. Please delete it before running this workflow."
            exit 1
          fi

      - name: Install dependencies
        run: npm install

      - name: Build site
        run: npm run build

      - name: Generate site manifest (dummy hashes)
        id: generate-manifest
        run: |
          echo '{"resources":[{"path":"/index.html","blob_id":"dummy-blob-id","blob_hash":"dummy-hash"}]}' > site_manifest.json
          echo "dummy provenance content" > site-provenance.intoto.jsonl
          HASHES=$(jq -r '[.resources[] | "\(.blob_hash)  \(.path)" ] | join("\n")' site_manifest.json | sha256sum | base64 -w0)
          echo "base64_hashes=$HASHES" >> "$GITHUB_OUTPUT"
          ls

      - name: Upload site manifest and output directory
        uses: actions/upload-artifact@v4
        with:
          name: site-assets
          path: |
            site_manifest.json
            site-provenance.intoto.jsonl
            ${{ steps.parse.outputs.output_dir }}

  provenance:
    needs: build-site
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: ${{ needs.build-site.outputs.base64_hashes }}
      upload-assets: false
      provenance-name: 'site-provenance.intoto.jsonl'
    permissions:
      id-token: write
      contents: write
      actions: read

  deploy:
    needs: [build-site, provenance]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download build outputs and site files
        uses: actions/download-artifact@v4
        with:
          name: site-assets
          path: .

      - name: Copy manifest and provenance to output directory
        run: |
          OUTPUT_DIR=$(jq -r '.outputDir // "dist"' site.config.json)
          cp site_manifest.json "$OUTPUT_DIR/"
          cp site-provenance.intoto.jsonl "$OUTPUT_DIR/"

      - name: Deploy to Walrus Sites
        uses: zktx-io/walrus-sites-provenance@v0.0.12
        with:
          config-path: ./site.config.json
        env:
          ED25519_PRIVATE_KEY: ${{ secrets.ED25519_PRIVATE_KEY }}
